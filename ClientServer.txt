1) Прочиать про клиент-серверную архитектуру

Клієнт-серверну архітектуру можна означити, як концепцію інформаційної мережі в якій основна частина її ресурсів зосереджена в серверах, обслуговуючих своїх клієнтів. Така архітектура визначає такі типи компонентів

набір серверів, які надають інформацію або інші послуги програмам, які звертаються до них;
набір клієнтів, які використовують сервіси, що надаються серверами;
мережа, яка забезпечує взаємодію між клієнтами та серверами.

Правила взаємодії між клієнтом і сервером називаються протоколом обміну (протоколом взаємодії)

Дволанкова клієнт-серверна архітектура, модель
тонкий - все на сервері (логіка застосунку та управління данними)
товстий клієнт - сервер тільки керує данними, обробка інформації та представлення на стороні клієнта (мобільний телефон)

Трьохланкова клієнт-серверна архітектура (клієнт сервер датабаза)
передбачає відділення прикладного рівня від управління даними. Відокремлюється окремий програмний рівень, на якому зосереджується прикладна логіка застосунку. Програми проміжного рівня можуть функціювати під управлінням спеціальних серверів застосунків, але запуск таких програм може здійснюватися і під управлінням звичайного веб-сервера. Нарешті, управління даними здійснюється сервером даних.

Дволанкова архітектура простіша, так як всі запити обслуговуються одним сервером, але саме через це вона менш надійна і висуває підвищені вимоги до продуктивності сервера.

Інформація на різних веб-серверах - набір сторінок у вигляді файлів які зберігаються на сервері у розмітці HTML 

Основна ідея архітектури «клієнт-сервер» полягає в поділі мережевого додатки на кілька компонентів, кожен з яких реалізує специфічний набір сервісів. Компоненти такого додатку можуть виконуватися на різних комп’ютерах, виконуючи серверні і/або клієнтські функції. Це дозволяє підвищити надійність, безпеку і продуктивність мережевих додатків і мережі в цілому.

поділ мережевого додатку на кілька компонентів які виконуються на різних компютерах 

Ролі серверів
Роль — це функція сервера (наприклад поштовий, контролер домена тощо). Один сервер може відігравати як одну так і декілька ролей одночасно.
(веб, сервер застосунків, сервер баз данних, файловий сервер, сервер друку, поштовий сервер, термінальний (обчислювальний), впн-ремоут аксес, DNS Server - перетворення доменні імена в адреси айпі, ігровийБ стрімінг, DHCP - клієнт отримує айпі).

2) Что ткое HTTP и HTTPS
HyperText Transfer Protocol — протокол передачі гіпертексту
це прикладний протокол передачі даних у мережі. 
Наразі його використовують для отримання інформації з веб-сайтів. Протокол HTTP заснований на використанні технології «клієнт-сервер»: клієнт, що відправляє запит, є ініціатором з’єднання; сервер, який отримує запит, виконує його і відправляє клієнту результат.
ПРОТОКОЛ БЕЗ ЗАПАМЯТОВУВАННЯ СТАНУ
TCP - протокол транспортування повідомлень трансмішн контрол протокол

HTTPS (з англ. HyperText Transfer Protocol Secure — безпечний протокол передачі гіпертексту) — це розширення протоколу HTTP, що підтримує шифрування за допомогою криптографічних протоколів SSL и TLS.

HTTP використовує порт 80, HTTPS — порт 443.

3) HTTP методы
методи запитів. що саме виконається яка бажана дія, вказати дію яку необхідно виконати на сервері.

GET - запит на показ ресурсу. Повернення ресурсу сервером URL
POST - створення нового ресурсу (дані для створення)
PUT - оновлення існуючого ресурсу
DELETE - видалення існуючуого ресурсу 

HEAD - запит на ресурc але без тіла повідомлення. як пост. він використовується для отримання заголовків певного ресурсу від сервера, звичайно для того, щоб перевірити за допомогою тимчасової позначки, чи не змінився ресурс.
TRACE - 
OPTIONS - отримування підтримуваних сервером можливостей

URL - юніформ ресурс локатор

4) HTTP статус коды сервера
 частина першого рядка відповіді сервера при запитах за протоколом HTTP
1- клас стану
Інформаційні, успішні, перенаправлення, клієнтська помилка, серверна помилка
